{"version":3,"sources":["components/Header.js","components/Footer.js","actions/menus-actions.js","components/Content.js","components/Home.js","components/About.js","components/Contact.js","actions/users-actions.js","components/AddUser.js","components/UserDetails.js","components/Users.js","reducers/reducer-menus.js","reducers/reducer-users.js","redux.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Component","Footer","year","Date","getFullYear","style","textAlign","addItem","menu_item","type","payload","removeItem","Content","handleSubmit","_this","refs","value","props","dispatch","handleRemove","margin","ref","placeholder","onClick","this","menu","map","index","key","connect","store","menusReducer","users","usersReducer","Home","components_Content","About","Contact","setUsers","addUser","user","AddUser","saveToServer","name","email","balance","options","method","body","JSON","stringify","headers","Content-Type","fetch","then","res","json","console","log","data","catch","error","UserDetails","Users","getUsersData","usersList","_id","id","Route","path","component","state","arguments","length","undefined","action","Object","toConsumableArray","concat","filter","item","allReducers","combineReducers","createStore","window","App","es","BrowserRouter","components_Header","Switch","exact","components_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e0e1be7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass Header extends Component {\n\n    render() {\n\n      return (\n        <div className=\"header\">\n          <h1>My Restaurant</h1>\n          <h4>\n            <Link to=\"/\">Home</Link> || \n            <Link to=\"/users\">Users</Link> || \n            <Link to=\"/about\">About</Link> ||   \n            <Link to=\"/contact\">Contact Us</Link> \n          </h4>\n        </div>\n\n      )\n  \n    }\n  \n  }\n\n  export default Header","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n  render() {\n    let year = new Date().getFullYear()\n    return (\n      <div>\n        <p style={{ textAlign: 'center' }}>copyright &copy; {year}. All rights reserved.</p>\n      </div>\n    )\n\n  }\n\n}\n\n\nexport default Footer","\nconst addItem = ( menu_item ) => {\n    return { type: \"ADD_ITEM\", payload: menu_item }\n}\nconst removeItem = ( menu_item ) => {\n    return { type: \"REMOVE_ITEM\", payload: menu_item }\n}\n\nexport { addItem, removeItem }","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport {addItem, removeItem } from '../actions/menus-actions'\n\nclass Content extends Component {\n\n  handleSubmit = () => {\n\n    let menu_item = this.refs.menu_item.value\n    \n    this.props.dispatch( addItem( menu_item ) )\n\n  }\n\n  handleRemove = () => {\n\n    let menu_item = this.refs.menu_item.value\n    this.props.dispatch( removeItem( menu_item ) )\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"contentArea\">\n\n        <div style={{ textAlign: 'center', margin: '20px 0' }}>\n\n          <input type=\"text\" ref=\"menu_item\" placeholder=\"Enter Item Name\" />\n          <input type=\"submit\" value=\"Add\" onClick={this.handleSubmit} />\n          <input type=\"submit\" value=\"Remove\" onClick={this.handleRemove} />\n\n        </div>\n\n        <div className=\"listArea\">\n\n          <h2>Menus:</h2>\n          {this.props.menu.map((value, index) => {\n            return <li key={index}>{value}</li>\n          })}\n\n        </div>\n\n\n      </div>\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (store) =>{\n  return {\n    menu: store.menusReducer,\n    users: store.usersReducer\n  }\n}\n\n\nexport default connect( mapStateToProps )( Content )\n\n\n\n\n\n\n\n\n\n\n// const mapStateToProps = (store) => {\n//   return {\n//     menu: store.menusReducer\n//   }\n// }","import React, { Component } from 'react';\nimport Content from './Content'\nclass Home extends Component {\n\n  render() {\n    \n    return (\n      <div>\n        <Content />\n      </div>\n    )\n\n  }\n\n}\n\n\nexport default Home","import React, { Component } from 'react';\n\nclass About extends Component {\n\n  render() {\n    \n    return (\n      <div>\n        <h1>About Page of Restaurant</h1>\n      </div>\n    )\n\n  }\n\n}\n\n\nexport default About","import React, { Component } from 'react';\n\nclass Contact extends Component {\n\n  render() {\n    \n    return (\n      <div>\n        <h1>Contact Page of Restaurant</h1>\n      </div>\n    )\n\n  }\n\n}\n\n\nexport default Contact","const setUsers = ( users ) => {\n    return { type: \"SET_USERS\", payload: users }\n}\n\n\nconst addUser = ( user ) => {\n    return { type: \"ADD_USER\", payload: user }\n}\n\nexport { setUsers, addUser }","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { addUser } from '../actions/users-actions'\n\nclass AddUser extends Component {\n\n  saveToServer = () => {\n    let name = this.refs.name.value\n    let email = this.refs.email.value\n    let balance = this.refs.balance.value\n\n    let user = { name: name, email: email, balance: balance }\n\n    var options = {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: { 'Content-Type': 'application/json' }\n    }\n    fetch('http://localhost:8000/addUser', options)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json)\n        this.props.dispatch(addUser(json.data))\n      })\n      .catch((error) => console.log(error))\n  }\n\n  render() {\n\n    return (\n      <div style={{ textAlign: 'center', margin: '20px 0' }}>\n\n        <input type=\"text\" ref=\"name\" placeholder=\"Full Name\" />\n        <input type=\"text\" ref=\"email\" placeholder=\"Email\" />\n        <input type=\"text\" ref=\"balance\" placeholder=\"Balance\" />\n        <input type=\"submit\" value=\"Add\" onClick={this.saveToServer} />\n\n      </div>\n    )\n\n  }\n\n}\n\nexport default connect()(AddUser)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nclass UserDetails extends Component {\n  \n  render() {\n    // console.log( this.props )\n    // console.log( this.props.match.params.id )\n    // console.log( this.props.match.params.email)\n\n    return (\n      <div className=\"userDetails\">\n      <h2>Users Details:</h2>\n      </div>\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    users: store.usersReducer\n  }\n}\n\nexport default connect(mapStateToProps)(UserDetails)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\n\nimport AddUser from './AddUser'\nimport UserDetails from './UserDetails'\n\nimport { setUsers } from '../actions/users-actions'\n\nclass Users extends Component {\n\n\n  getUsersData = () => {\n\n    fetch('http://localhost:8000/getAllUsers')\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json)\n        this.props.dispatch(setUsers(json.data))\n      })\n      .catch((error) => console.log(error))\n  }\n\n\n  render() {\n\n    const { users } = this.props\n\n    const usersList = users.map((user, index) => {\n      return <div key={user._id} className=\"listItem\">\n\n        <li>ID: {user._id}</li>\n        <li>Name: {user.name}</li>\n        <li>Email: {user.email}</li>\n        <li>Balance: {user.balance}</li>\n\n        <Link to={\"/users/details/\" + user.id + \"/\" + user.email}>Go To Details</Link>\n\n      </div>\n    })\n\n    return (\n      <div className=\"contentArea\">\n\n        <Link to=\"/users/add\">Add User</Link>\n\n        <Route path=\"/users/add\" component={AddUser} />\n        <Route path=\"/users/details/:id/:email\" component={UserDetails} />\n\n        <div className=\"listArea\">\n\n          <h2>Users:</h2>\n          <button onClick={this.getUsersData}>Get Users Data</button>\n          {usersList}\n          \n\n        </div>\n\n      </div>\n    )\n\n  }\n\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    users: store.usersReducer\n  }\n}\n\nexport default connect(mapStateToProps)(Users)","const menusReducer = (state = [\"Biryani\", \"Salad\", \"Ice Cream\"], action) => {\n\n    switch (action.type) {\n      case \"ADD_ITEM\":\n        return [ ...state, action.payload ]\n      case \"REMOVE_ITEM\":\n\n        return state.filter( ( item ) => { return item !== action.payload } )\n      \n      default:\n        return state\n  \n    }\n  \n  }\n\nexport default menusReducer\n\n","const usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_USERS\":\n      return action.payload\n    case \"ADD_USER\":\n      return [ action.payload, ...state ]\n    default:\n      return state\n\n  }\n}\n\nexport default usersReducer\n\n","import { createStore, combineReducers } from 'redux';\n\nimport menusReducer from './reducers/reducer-menus'\nimport usersReducer from './reducers/reducer-users'\n\nconst allReducers = combineReducers({ menusReducer, usersReducer })\n\nlet store = createStore(allReducers);\n\nwindow.store = store\n\nexport default store","import React, { Component } from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport './App.css';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Users from './components/Users'\nimport { Provider } from 'react-redux'\nimport store from './redux'\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header />\n\n            <Switch>\n\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/contact\" component={Contact} />\n              \n              <Route path=\"/users\" component={Users} />\n\n              <Route exact path=\"/\" component={Home} />\n\t\t\t  \n              <Route path=\"/\" component={Home} />\n\n            </Switch>\n            <Footer />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}